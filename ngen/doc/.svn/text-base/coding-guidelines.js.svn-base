/* -------------------------------------------------------
//////////////////////////////////////////////////////////
object create - crockfords beget
//////////////////////////////////////////////////////////
------------------------------------------------------- */
Object.create = function(o) {
    function F() {};
    F.prototype = o;
    return new F();
};

/* -------------------------------------------------------
//////////////////////////////////////////////////////////
package / file
//////////////////////////////////////////////////////////
------------------------------------------------------- */
(function(ns){ 
    
    /* -------------------------------------------------------
    //////////////////////////////////////////////////////////
    constructor
    //////////////////////////////////////////////////////////
    ------------------------------------------------------- */
    var base = function() {
        var that;
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        instance
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        that = {}; // base object
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        public
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        that.foo = 'bar';
        
        that.update = function() {
        };
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        return
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        return that;
    };
    
    /* -------------------------------------------------------
    //////////////////////////////////////////////////////////
    constructor
    //////////////////////////////////////////////////////////
    ------------------------------------------------------- */
    var sub = function(spec, our) { // note: use 'spec', 'nospec, our' or 'spec, our'
        var that, spec = spec || {}, our = our || {};
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        instance
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        that = base();
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        private
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        var _internalCounter = spec.counter || 0; // we use _ to have our code readable
        
        var updateInternalCounter = function() {
            _internalCounter++; // note: ++ is not that evil, c'mon
        };
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        shared
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        our.specialCounter = 0;
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        public
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        var super_update = that.update;
        that.update = function() {
            super_update.apply(this, [arguments]);
            // Do something else
        };
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        return
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        return that;
    };
    
    /* -------------------------------------------------------
    //////////////////////////////////////////////////////////
    constructor
    //////////////////////////////////////////////////////////
    ------------------------------------------------------- */
    var special = function(nospec, our) {
        var that, our = our || {};
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        instance
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        that = sub(null, our);
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        shared
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        our.specialCounter = 10; // overwriting!
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        public
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        that.recalculate = function() {
        };
        
        /* -------------------------------------------------------
        //////////////////////////////////////////////////////////
        return
        //////////////////////////////////////////////////////////
        ------------------------------------------------------- */
        return that;
    };
    
})(window);